import 'package:drift/drift.dart';
import 'package:drift_flutter/drift_flutter.dart';
import 'tables.dart';

part 'app_database.g.dart'; // This will be generated by build_runner

@DriftDatabase(tables: [Todos])
class AppDatabase extends _$AppDatabase {
  AppDatabase() : super(_openConnection());

  @override
  int get schemaVersion => 2; // Bump this when you change tables later

  static QueryExecutor _openConnection() {
    return driftDatabase(name: 'my_app_db');
  }

  @override
  MigrationStrategy get migration => MigrationStrategy(
    beforeOpen: (details) async {
      // This is called before the database is opened. You can use it to perform
      // any setup or initialization tasks.
      await customStatement('PRAGMA foreign_keys = ON');
    },
    onCreate: (migrator) async {
      // This is called when the database is created for the first time.
      await migrator.createAll();
    },

    onUpgrade: (migrator, from, to) async {
      if (from == 1) {
        await migrator.addColumn(todos, todos.dueDate);
      }
    },
  );
}
